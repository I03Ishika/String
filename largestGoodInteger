Example 1:

Input: num = "6777133339"
Output: "777"
Explanation: There are two distinct good integers: "777" and "333".
"777" is the largest, so we return "777".
Example 2:

Input: num = "2300019"
Output: "000"
Explanation: "000" is the only good integer.
Example 3:

Input: num = "42352338"
Output: ""
Explanation: No substring of length 3 consists of only one unique digit. Therefore, there are no good integers.
// public class Solution {
//     public String largestGoodInteger(String num) {
//         String ans = "";
//         String empty = ""; 
//         int temp = 0;
//         boolean check = true; 

//         for (int i = 0; i < num.length() - 2; i++) 
//         {
//            if (i + 2 < num.length() && num.charAt(i) == num.charAt(i + 1) && num.charAt(i) == num.charAt(i + 2)) 
//            {
//                 temp = Math.max(temp, num.charAt(i) - '0');
//                 check = false; 
//             }
//         }
//         if (!check) 
//         {        
//             for (int i = 0; i < 3; i++) 
//             {
//                 ans += temp;
//             }
//         } else { 
//             return empty;
//         }

//         return ans;
//     } 
// }




// class Solution {
//     public String largestGoodInteger(String num) {
//         int n = num.length();
//         String maxGoodInteger = "";

//         for (int i = 0; i <= n - 3; i++) {
//             String substring = num.substring(i, i + 3);

//             if (isGoodInteger(substring) && substring.compareTo(maxGoodInteger) > 0) {
//                 maxGoodInteger = substring;
//             }
//         }

//         return maxGoodInteger;
//     }

//     private boolean isGoodInteger(String str) {
//         return str.charAt(0) == str.charAt(1) && str.charAt(1) == str.charAt(2);
//     }
// }


class Solution {
    public String largestGoodInteger(String s) {
        int max=0;
        String ans="";
        char num[]=s.toCharArray();
        for(int i=0;i<num.length-2;i++){
            if(num[i]==num[i+1] && num[i+1]==num[i+2]){
             if(max < num[i]) {
                 max=num[i];
                 ans=s.substring(i,i+3);
             }
            }
        }
        return ans;
    }
}
